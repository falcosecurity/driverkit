version: 2
jobs:
  "test":
    docker:
      - image: docker.io/golang:1.16.0
    steps:
      - checkout
      - run:
          name: Test
          command: make test
  "images":
    docker:
      - image: docker:stable
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.12
      - run:
          name: Prepare env
          command: |
            echo ${DOCKERHUB_SECRET} | docker login -u ${DOCKERHUB_USER} --password-stdin
            apk update
            apk add make bash git curl
      - run:
          name: Install Docker Buildx
          command: |
            mkdir -vp ~/.docker/cli-plugins/
            curl --silent -L --output ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64
            chmod a+x ~/.docker/cli-plugins/docker-buildx
            docker run -it --rm --privileged tonistiigi/binfmt --install all
      - run:
          name: Build and Push all the docker images
          command: |
            export DOCKER_CLI_EXPERIMENTAL=enabled
            GIT_BRANCH="$CIRCLE_BRANCH" GIT_TAG="$CIRCLE_TAG" make push/all
      - run:
          name: Push latest images
          command: |
            export DOCKER_CLI_EXPERIMENTAL=enabled
            if [ -n "$CIRCLE_TAG" ]
            then
              GIT_BRANCH="$CIRCLE_BRANCH" GIT_TAG="$CIRCLE_TAG" make push/latest
            else
              echo "Skipping (no git tag)"
            fi
  "release":
    docker:
      - image: circleci/golang:1.16
    steps:
      - checkout
      - run:
          name: Install goreleaser
          command: |
            echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list
            sudo apt update
            sudo apt install goreleaser
      - run:
          name: Release
          command: GIT_TAG="$CIRCLE_TAG" make release
workflows:
  version: 2
  build:
    jobs:
      - "test":
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - "images":
          context: falco
          filters:
            branches:
              only:
                - master
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
          requires:
            - "test"
      - "release":
          context: falco
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
          requires:
            - "test"
            - "images"
