# This is a reusable workflow used by master and release CI
on:
  workflow_call:
    inputs:
      arch:
        description: amd64 or arm64
        required: true
        type: string
      branch:
        description: name of the branch
        required: false
        type: string
        default: 'master'
      tag:
        description: The tag to use (e.g. "master" or "0.35.0")
        required: false
        type: string
        default: ''
      is_latest:
        description: Update the latest tag with the new image
        required: false
        type: boolean
        default: false
      push:
        description: Whether to also push images
        required: false
        type: boolean
        default: false

jobs:
  build-images:
    runs-on: ${{ (inputs.arch == 'arm64' && 'ubuntu-22.04-arm') || 'ubuntu-22.04' }}
    env:
      GIT_BRANCH: ${{ inputs.branch }}
      GIT_TAG: ${{ inputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        
      - name: Create download folder
        run: mkdir -p build-${{ inputs.arch }}
        
      - name: Download Driverkit
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: driverkit-${{ inputs.arch }}
          path: build-${{ inputs.arch }}
          
      - name: Enforce executable bit
        run: chmod +x build-${{ inputs.arch }}/driverkit
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
          
      - name: Login to Docker Hub
        if: inputs.push
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_SECRET }}
          
      - name: Build and Push docker images
        if: inputs.push
        run: make push/all

      - name: Build docker images
        if: inputs.push == false
        run: make image/all

      - name: Push latest images if needed
        if: inputs.push && inputs.is_latest
        run: make push/latest
